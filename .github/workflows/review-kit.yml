name: review-kit
on:
  pull_request:
    paths:
      - '**/*.ts'
      - '**/*.tsx'
      - 'samples/**'
      - 'scripts/hhfab-smoke.sh'
      - 'REVIEW_KIT_PR13.md'
  schedule:
    - cron: '17 3 * * *'
  workflow_dispatch: {}
permissions:
  contents: read
  pull-requests: read
  actions: read
concurrency:
  group: review-kit-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  determine-strict:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      require-strict: ${{ steps.evaluate.outputs.require_strict }}
    steps:
      - uses: dorny/paths-filter@v3
        id: cf
        with:
          filters: |
            hhfab:
              - 'contracts/**'
              - 'samples/**'
      - uses: actions/github-script@v7
        id: evaluate
        env:
          PATHS_MATCH: ${{ steps.cf.outputs.hhfab }}
        with:
          script: |
            const labels = (context.payload.pull_request?.labels || []).map(label => label.name);
            const requireStrict = labels.includes('enforce-hhfab') || process.env.PATHS_MATCH === 'true';
            core.setOutput('require_strict', requireStrict ? 'true' : 'false');

  review-kit:
    if: github.event_name == 'pull_request'
    needs: determine-strict
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    env:
      STRICT_REQUIRED: ${{ needs.determine-strict.outputs.require-strict }}
    steps:
      - uses: actions/checkout@v4

      - name: Register hhfab problem matcher
        run: echo '::add-matcher::.github/hhfab-problem-matcher.json'

      - name: Ensure PR checklist confirmed (with override)
        if: github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'maintainer-override')
        run: |
          body="$(jq -r '.pull_request.body' "$GITHUB_EVENT_PATH")"
          if ! echo "$body" | grep -q '\- \[x\] I ran `make review-kit`'; then
            echo 'Checklist not confirmed.'
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Show tool versions
        run: |
          node -v
          npm -v
          hhfab version || true

      - run: npm ci

      - name: Lint / Type / Tests
        run: |
          npm run lint -- --max-warnings=0
          npm run typecheck || npx tsc -p tsconfig.json --noEmit
          npm run test:core || npm test

      - name: hhfab smoke (best-effort)
        run: bash scripts/hhfab-smoke.sh

      - name: Archive review-kit logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: review-kit-${{ github.run_id }}
          path: |
            **/*.hhfab.log
            **/review-kit/**/report/**/*
          retention-days: 7
          if-no-files-found: ignore

      - name: Write run summary
        if: always()
        run: |
          {
            echo '## hhfab review-kit'
            echo "- Strict required: ${STRICT_REQUIRED}"
            echo "- Artifacts: review-kit-${GITHUB_RUN_ID}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upsert sticky comment
        if: always() && github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: review-kit
          message: |
            **hhfab review-kit**
            - Status: ${{ job.status }}
            - Strict required: `${{ needs.determine-strict.outputs.require-strict }}`
            - Artifacts: `review-kit-${{ github.run_id }}`
            - Problem-matcher: `hhfab`

  review-kit-strict:
    if: github.event_name == 'pull_request' && needs.determine-strict.outputs.require-strict == 'true'
    needs: determine-strict
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4

      - name: Register hhfab problem matcher
        run: echo '::add-matcher::.github/hhfab-problem-matcher.json'

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Show tool versions
        run: |
          node -v
          npm -v

      - run: npm ci

      - name: Show hhfab version (containerized)
        run: docker run --rm -v "$PWD:/w" -w /w ghcr.io/your-org/hhfab:latest bash -lc 'hhfab version'

      - name: Strict hhfab smoke
        run: docker run --rm -v "$PWD:/w" -w /w ghcr.io/your-org/hhfab:latest bash -lc 'scripts/hhfab-smoke.sh'

      - name: Archive review-kit logs (strict)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: review-kit-strict-${{ github.run_id }}
          path: |
            **/*.hhfab.log
            **/review-kit/**/report/**/*
          retention-days: 7
          if-no-files-found: ignore

      - name: Write run summary
        if: always()
        run: |
          {
            echo '## hhfab review-kit (strict)'
            echo '- Mode: enforce-hhfab'
            echo "- Artifacts: review-kit-strict-${GITHUB_RUN_ID}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upsert sticky comment
        if: always() && github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: review-kit-strict
          message: |
            **hhfab review-kit (strict)**
            - Status: ${{ job.status }}
            - Artifacts: `review-kit-strict-${{ github.run_id }}`
            - Problem-matcher: `hhfab`

  nightly-hhfab:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Register hhfab problem matcher
        run: echo '::add-matcher::.github/hhfab-problem-matcher.json'
      - name: Run nightly review-kit smoke
        run: make review-kit
